[{"/Users/madhurdixit/Downloads/yanft/src/index.js":"1","/Users/madhurdixit/Downloads/yanft/src/App.js":"2","/Users/madhurdixit/Downloads/yanft/src/Navbar.js":"3","/Users/madhurdixit/Downloads/yanft/src/Home.js":"4","/Users/madhurdixit/Downloads/yanft/src/Mast.js":"5","/Users/madhurdixit/Downloads/yanft/src/Create.js":"6","/Users/madhurdixit/Downloads/yanft/src/BlogDetails.js":"7","/Users/madhurdixit/Downloads/yanft/src/ErrorMessage.js":"8","/Users/madhurdixit/Downloads/yanft/src/TxList.js":"9","/Users/madhurdixit/Downloads/yanft/src/Lock.js":"10","/Users/madhurdixit/Downloads/yanft/src/TxList2.js":"11","/Users/madhurdixit/Downloads/yanft/src/Vote.js":"12","/Users/madhurdixit/Downloads/yanft/src/TxList3.js":"13","/Users/madhurdixit/Downloads/yanft/src/Poap.js":"14"},{"size":824,"mtime":1648838691784,"results":"15","hashOfConfig":"16"},{"size":1133,"mtime":1648851153967,"results":"17","hashOfConfig":"16"},{"size":1000,"mtime":1648851892653,"results":"18","hashOfConfig":"16"},{"size":1737,"mtime":1648385960000,"results":"19","hashOfConfig":"16"},{"size":9495,"mtime":1648845493385,"results":"20","hashOfConfig":"16"},{"size":135,"mtime":1648384230000,"results":"21","hashOfConfig":"16"},{"size":5085,"mtime":1648840635720,"results":"22","hashOfConfig":"16"},{"size":664,"mtime":1648250732000,"results":"23","hashOfConfig":"16"},{"size":1365,"mtime":1648840424703,"results":"24","hashOfConfig":"16"},{"size":8633,"mtime":1648847043702,"results":"25","hashOfConfig":"16"},{"size":898,"mtime":1648846512993,"results":"26","hashOfConfig":"16"},{"size":10109,"mtime":1648850285571,"results":"27","hashOfConfig":"16"},{"size":875,"mtime":1648850517384,"results":"28","hashOfConfig":"16"},{"size":10028,"mtime":1648851821525,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17shays",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/madhurdixit/Downloads/yanft/src/index.js",[],["67","68"],"/Users/madhurdixit/Downloads/yanft/src/App.js",[],"/Users/madhurdixit/Downloads/yanft/src/Navbar.js",["69","70","71","72","73","74"],"/Users/madhurdixit/Downloads/yanft/src/Home.js",["75","76","77","78","79","80","81","82","83","84","85","86","87"],"\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport borgabi from \"./Borg.json\";\nimport factoryabi from \"./Factoryabi.json\";\nimport { gql } from \"@apollo/client\";\nimport { client } from \"./index\";\nimport BigNumber from \"big-number\";\nimport styles from \"./styles.css\";\nimport icon from \"./assets/icon.png\";\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList from \"./TxList\";\n\n\nexport default function Home() {\n  \n  return (\n    <>\n  <div id=\"home\" class=\"sub-section wf-section\">\n    <div class=\"sub-wrapper-1\">\n      <h1 class=\"sub-h1\">Deploy <span class=\"sub-h1-gradient\">no-code, low-gas </span>NFT ERC-721 smart contract</h1>\n    </div>\n    <div class=\"sub-wrapper-2\">\n      <div class=\"sub-wrapper-content\">\n        <div class=\"sub-body-wrapper\">\n          <div class=\"sub-body-copy\">YaNFT will empower web3 creators to have a concrete on-chain foundation with true creative ownership of their art &amp; smart contracts. All this with the lowest gas fees to mint their own contracts.</div>\n        </div>\n        <div class=\"sub-cta-wrapper\">\n        <Link class=\"deploy-link\"variant=\"body2\"\n              to={{\n                pathname: `/deploy`\n              }}\n                >\n          <a href=\"create.html\" class=\"sub-cta w-inline-block\">\n            <div class=\"sub-cta-text\">LAUNCH APP</div><img src=\"public/Next.svg\" loading=\"lazy\" alt=\"\" class=\"sub-next-btn\"></img>\n          </a></Link>\n        </div>\n      </div>\n      <div class=\"sub-footer\">\n        <div class=\"sub-footer-text\">Developed by team<span class=\"text-span-2\"> @NFTKnights</span></div>\n      </div>\n    </div>\n  </div>\n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/Mast.js",["88","89","90","91","92","93","94","95","96","97","98","99","100"],"\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport borgabi from \"./Borg.json\";\nimport factoryabi from \"./Factoryabi.json\";\nimport { gql } from \"@apollo/client\";\nimport { client } from \"./index\";\nimport BigNumber from \"big-number\";\nimport styles from \"./styles.css\";\nimport icon from \"./assets/icon.png\";\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList from \"./TxList\";\n\n\nconst CONTRACT_ADDRESS = \"0xFbCfa71Edfa6a7C4145A11b5417C4bc571F6f851\";\n\nexport default function Home() {\n  const state = {\n    button: 1,\n  };\n  const [txs, setTxs] = useState([]);\n  const [contractListened, setContractListened] = useState();\n  const [error, setError] = useState();\n  const [contractInfo, setContractInfo] = useState({\n    address: \"-\",\n    tokenName: \"-\",\n    tokenSymbol: \"-\",\n    totalSupply: \"-\",\n  });\n  const [balanceInfo, setBalanceInfo] = useState({\n    address: \"-\",\n    balance: \"-\",\n  });\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    client\n      .query({\n        query: gql`\n          query {\n            nftEntities {\n              id\n              contractAddress\n              contractInitialOwner\n              tokenName\n              tokenSymbol\n              limit\n              mintAmount\n              dynamic\n            }\n          }\n\n        `,\n      })\n      .then((result) => {\n        setTableData([...result.data.nftEntities]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (contractInfo.address !== \"-\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const erc20 = new ethers.Contract(\n        contractInfo.address,\n        erc20abi,\n        provider\n      );\n\n      erc20.on(\"Transfer\", (from, to, amount, event) => {\n        console.log({ from, to, amount, event });\n\n        setTxs((currentTxs) => [\n          ...currentTxs,\n          {\n            txHash: event.transactionHash,\n            from,\n            to,\n            amount: String(amount),\n          },\n        ]);\n      });\n      setContractListened(erc20);\n\n      return () => {\n        contractListened.removeAllListeners();\n      };\n    }\n  }, [contractInfo.address]);\n\n  const setErrorHandler = (val) => {\n      setError(\n        ErrorMessage({\n          message: val,\n        })\n      );\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    \n  };\n\n  const handleMintNFT = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    let bndata = await contractObj.getLatestPrice().then((response)=>{\n      return(response);\n    })\n    await console.log(\"Hello\")\n    let fiveusd = BigNumber(\"50\").multiply(BigNumber(\"100000000000000000000000000\")).divide(BigNumber(bndata.toString()));\n    let finalDol = BigNumber(fiveusd.toString()).add(BigNumber(1000000000))\n    await console.log(finalDol.toString())\n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"nftname\"))\n    await console.log(data.get(\"nftsymbol\"))\n    await console.log(data.get(\"nftlimit\"))\n    await console.log(data.get(\"nftamount\"))\n    let namount = await data.get(\"nftamount\")\n    await console.log(namount*(10**18))\n    namount = BigNumber(namount*(10**18)).toString()\n    await console.log(\"---\",namount.toString())\n    await console.log(data.get(\"baseURI\"))\n    await console.log(data.get(\"radio\"))\n    await console.log(finalDol)\n    let ds = false;\n    if(data.get(\"radio\")===\"dynamic\"){\n      ds = true\n    }else{\n      ds = false\n    }\n\n    try {\n      \n      await contractObj.createStorage(data.get(\"nftname\"),data.get(\"nftsymbol\"),data.get(\"nftlimit\"),namount,ds,data.get(\"baseURI\"),false,{ value: finalDol.toString() });\n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n    \n  };\n  \n  \n\n  const handleSetSlotURI = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    try {\n      \n      await contractObj.withdrawFees();\n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n  };\n\n  \n\n\n  return (\n    <>\n\n<div id=\"app\" class=\"sub-app-section wf-section\">\n    <div class=\"sub-app-wrapper-1\">\n      <h2 class=\"sub-h2\">Deploy your NFT ERC-721 in minutes</h2>\n      <div class=\"w-form\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handleMintNFT}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Enter your NFT collection/ project name*</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"nftname\" data-name=\"Name 2\" placeholder=\"Eg. MY NFT Project\" id=\"nftname\" required=\"\"></input>\n              <label for=\"text\" class=\"sub-form-label\">Give your project a token name *</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftsymbol\" maxlength=\"256\" name=\"nftsymbol\" data-name=\"Email 2\" placeholder=\"Eg: $MYNFT\" id=\"nftsymbol\" required=\"\"></input>\n              <label for=\"text\" class=\"sub-form-label\">Enter IPFS Base URI of your NFT collection/ project*</label>\n              <input type=\"text\" class=\"sub-input-field w-input baseURI\" maxlength=\"256\" name=\"baseURI\" data-name=\"Email 2\" placeholder=\"Eg: $MYNFT\" id=\"baseURI\" required=\"\"></input>\n              </div>\n              <div class=\"div-block-3\">\n                <label for=\"field-4\" class=\"sub-form-label\">Enter your NFT supply*</label>\n                <input type=\"text\" class=\"sub-input-field w-input nftlimit\" maxlength=\"256\" name=\"nftlimit\" data-name=\"Field 3\" placeholder=\"Eg: 8888 or 10000\" id=\"nftlimit\" required=\"\"></input>\n                <label for=\"field-4\" class=\"sub-form-label\">Enter price of each NFT *</label>\n                <input type=\"text\" class=\"sub-input-field w-input nftamount\" maxlength=\"256\" name=\"nftamount\" data-name=\"Field 2\" placeholder=\"Eg: 0.1 ETH, 0.08 ETH\" id=\"nftamount\" required=\"\"></input>\n                <label for=\"email-3\" class=\"sub-form-label\">Do you want your project to have reveal feature?*</label>\n                <div class=\"sub-input-field\">\n                  <label class=\"radio-button-field-2 w-radio\">\n                    <input type=\"radio\" data-name=\"Radio\" id=\"radio\" name=\"radio\" value=\"dynamic\" class=\"w-form-formradioinput radio-button w-radio-input exampleRadios\"></input>\n                    <span class=\"radio-lbl w-form-label\" for=\"radio\">Yes</span></label>\n                  <label class=\"radio-button-field w-radio\">\n                    <input type=\"radio\" data-name=\"Radio 3\" id=\"radio-3\" name=\"radio\" value=\"static\" class=\"w-form-formradioinput radio-button w-radio-input exampleRadios\"></input>\n                    <span class=\"radio-lbl w-form-label\" for=\"radio-3\">No</span></label></div>\n            </div>\n          </div><input type=\"submit\" value=\"DEPLOY CONTRACT\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        <div class=\"w-form-done\">\n          <div>Thank you! Your submission has been received!</div>\n        </div>\n        <div class=\"w-form-fail\">\n          <div>Oops! Something went wrong while submitting the form.</div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-app-section withdraw-contract wf-section\">\n    <div class=\"sub-app-wrapper-1 withdraw-bloc\">\n      <div class=\"mint-grid\">\n        <div class=\"withdraw\">\n        <form onSubmit={handleSetSlotURI}>\n          <h2 class=\"sub-h2 mint-heading-copy\">Withdraw funds</h2>\n          <div class=\"contract-info\">You can withdraw your funds from below</div>\n          <button class=\"mint w-inline-block\">\n            <div class=\"text-block\">Withdraw funds</div>\n          </button>\n          </form>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-recent wf-section\">\n    <div class=\"sub-app-wrapper-3\">\n      <h2 class=\"sub-h2\">Recent Deployments</h2>\n      <div id=\"w-node-_5c0edcd0-be75-3544-4a1a-61ea9d6c71eb-08db29d9\" class=\"info-card\">\n        <TxList txs={tableData} />\n      </div>\n    </div>\n  </div>\n\n        \n\n        {\n          // tableData.map(function(element){\n          //   return(\n\n              \n          //     )\n          // })\n        }\n\n\n        {/* <Link to={{\n    pathname: \"/blogs/0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7\",\n    state: {\n      fromText: \"this is data\",\n    }\n  }}>\n            <h2>0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</h2>\n            <p>Written by 0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</p>\n          </Link> */}\n    \n      \n    \n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/Create.js",[],"/Users/madhurdixit/Downloads/yanft/src/BlogDetails.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import { useParams, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport borgabi from \"./Borg.json\";\nimport factoryabi from \"./Factoryabi.json\";\nimport erc721abi from \"./ERC721abi.json\";\nimport { fromPromise, gql } from \"@apollo/client\";\nimport { client } from \"./index\";\nimport BigNumber from \"big-number\";\nimport styles from \"./Styles.module.css\";\nimport icon from \"./assets/icon.png\";\nimport ErrorMessage from \"./ErrorMessage\";\n\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const location = useLocation()\n  // const { from } = location.state\n  const [tableData, setTableData] = useState([]);\n  console.log(id)\n  const stateButton = {\n    button: 1,\n  };\n  const state = location.state.nftcontractdata  \n\n  const handleMintNFT = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(\"Nft contract : \",state.contractAddress)\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(state.contractAddress,erc721abi,signer);\n    try {\n      \n      await contractObj.mintNFT(data.get(\"nftid\"),{ value: state.mintAmount });\n    } catch (error) {\n      await console.log(error.message)\n      \n    }\n  };\n  \n  const handleWithdrawFee = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(\"Nft contract : \",state.contractAddress)\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(state.contractAddress,erc721abi,signer);\n    \n    try {\n      \n      await contractObj.withdrawFees();\n    } catch (error) {\n      await console.log(error.message)\n      \n    }\n  };\n\n  return (\n    <div className=\"blog-details\">\n    <div id=\"app\" class=\"sub-app-section mint-page wf-section\">\n    <div class=\"sub-app-wrapper-1 mint-block\">\n      <div class=\"mint-grid\">\n        <div class=\"div-block-7\">\n          <div class=\"mint-form w-form\">\n            <form id=\"email-form-2\" name=\"email-form-2\" data-name=\"Email Form 2\" method=\"get\" class=\"form-2\" onSubmit={handleMintNFT}>\n              <h2 class=\"sub-h2 mint-heading\">Mint an NFT</h2>\n              <div class=\"mint-input\"><label for=\"name-2\" class=\"sub-form-label\">Enter your NFT collection/ project name*</label>\n              <input type=\"text\" class=\"sub-input-field w-input\" maxlength=\"256\" name=\"nftid\" data-name=\"Name 2\" placeholder=\"Eg. 2,3,4\" id=\"name-2\" required=\"\"></input></div>\n              <input type=\"submit\" name=\"create bet\" value=\"Create bet\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n            </form>\n            <div class=\"w-form-done\">\n              <div>Thank you! Your submission has been received!</div>\n            </div>\n            <div class=\"w-form-fail\">\n              <div>Oops! Something went wrong while submitting the form.</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"div-block-7\">\n          <h2 class=\"sub-h2 mint-heading\">Project Details</h2>\n          <div class=\"info-card mint-pade\">\n          <p class=\"contract-info\">\n        {console.log(state)}\n        Name : <strong> {state.tokenName}</strong><br></br>\n        Symbol : <strong> {state.tokenSymbol}</strong><br></br>\n        NFT Max Limit : <strong> {state.limit}</strong><br></br>\n        Mint Price : <strong> {(Number(state.mintAmount)/(10**18)).toString()} ETH</strong><br></br>\n        Dynamic NFT : <strong> {state.dynamic  ? \"true\" : \"false\"}</strong><br></br>\n        Owner : <strong> {state.contractInitialOwner}</strong><br></br>\n        \n      </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-app-section withdraw-page wf-section\">\n    <div class=\"sub-app-wrapper-1 withdraw-bloc\">\n      <div class=\"mint-grid\">\n        <div class=\"withdraw\">\n          <h2 class=\"sub-h2 mint-heading-copy\">Are you the project owner ?</h2>\n          <div class=\"contract-info\">You can withdraw your funds from below</div>\n          <form onSubmit={handleWithdrawFee}>\n          <button class=\"mint w-inline-block\" name=\"create bet\" value=\"create bet\">\n            <div class=\"text-block\">Withdraw your funds</div></button>\n            </form>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  \n\n    </div>\n  );\n}\n \nexport default BlogDetails;\n\n// {\n//   \"__typename\": \"NftEntity\",\n//   \"id\": \"0xc3c21b6eb023909df4323865a7d2b3afdbd5828d\",\n//   \"contractAddress\": \"0xc3c21b6eb023909df4323865a7d2b3afdbd5828d\",\n//   \"contractInitialOwner\": \"0x0a145677ed307ea97b8ea6e506add16a0f47f182\",\n//   \"tokenName\": \"TtestNFT2\",\n//   \"tokenSymbol\": \"TNFT2\",\n//   \"limit\": \"40\",\n//   \"mintAmount\": \"30\",\n//   \"dynamic\": false\n// }","/Users/madhurdixit/Downloads/yanft/src/ErrorMessage.js",[],"/Users/madhurdixit/Downloads/yanft/src/TxList.js",["116"],"\nimport { Link } from 'react-router-dom';\nimport BigNumber from \"big-number\";\n\nexport default function TxList({ txs }) {\n  if (txs.length === 0) return null;\n  return (\n    <>\n      {txs\n        .map((item, idx) => (\n\n          <div key={idx} class=\"info-card\"><div id=\"w-node-_5f9e2abd-4801-26ba-696e-77b214c9096f-08db29d9\">\n          <p class=\"contract-info\">Contract Address: {item.contractAddress}</p>\n          <p class=\"contract-info\">Project Owner: {item.contractInitialOwner}</p>\n          <p class=\"contract-info\">NFT Name: {item.tokenName}</p>\n          <p class=\"contract-info\">NFT Ticker: {item.tokenSymbol}</p>\n          <p class=\"contract-info\">Total Supply: {item.limit}</p>\n          <p class=\"contract-info\">Mint Amount: {(Number(item.mintAmount)/(10**18)).toString()} ETH</p>\n          {/* <p class=\"contract-info\">Mint Amount: {BigNumber(item.mintAmount).toString()}</p> */}\n          <p class=\"contract-info\">Preveal Feature: {item.dynamic ? \"true\" : \"false\"}</p>\n          <Link variant=\"body2\" class=\"mint w-inline-block\"\n              to={{\n                pathname: `/blogs/${item.id}`,\n                state: {\n                  nftcontractdata: item,\n                }}}\n                >\n            <div class=\"text-block\">Mint NFTs from this Project</div>\n            </Link></div>\n        </div>\n          \n        ))}\n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/Lock.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport erc721abi from \"./ERC721abi.json\";\nimport borgabi from \"./Borg.json\";\nimport factoryabi from \"./Factoryabi.json\";\nimport { gql } from \"@apollo/client\";\nimport { client } from \"./index\";\nimport BigNumber from \"big-number\";\nimport styles from \"./styles.css\";\nimport icon from \"./assets/icon.png\";\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList2 from \"./TxList2\";\n\n\nconst CONTRACT_ADDRESS = \"0xFbCfa71Edfa6a7C4145A11b5417C4bc571F6f851\";\n\nexport default function Lock() {\n  const state = {\n    button: 1,\n  };\n  const [txs, setTxs] = useState([]);\n  const [contractListened, setContractListened] = useState();\n  const [error, setError] = useState();\n  const [contractInfo, setContractInfo] = useState({\n    address: \"-\",\n    tokenName: \"-\",\n    tokenSymbol: \"-\",\n    totalSupply: \"-\",\n  });\n  const [balanceInfo, setBalanceInfo] = useState({\n    address: \"-\",\n    balance: \"-\",\n  });\n  const [tableData, setTableData] = useState([]);\n  let totalVote = 0;\n  useEffect(() => {\n    client\n      .query({\n        query: gql`\n          query {\n            userEntities{\n    id\n    userAddress\n    votingPower\n  }\n\n          }\n\n        `,\n      })\n      .then((result) => {\n        setTableData([...result.data.userEntities]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (contractInfo.address !== \"-\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const erc20 = new ethers.Contract(\n        contractInfo.address,\n        erc20abi,\n        provider\n      );\n\n      erc20.on(\"Transfer\", (from, to, amount, event) => {\n        console.log({ from, to, amount, event });\n\n        setTxs((currentTxs) => [\n          ...currentTxs,\n          {\n            txHash: event.transactionHash,\n            from,\n            to,\n            amount: String(amount),\n          },\n        ]);\n      });\n      setContractListened(erc20);\n\n      return () => {\n        contractListened.removeAllListeners();\n      };\n    }\n  }, [contractInfo.address]);\n\n  const setErrorHandler = (val) => {\n      setError(\n        ErrorMessage({\n          message: val,\n        })\n      );\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    \n  };\n\n  const handleLocktNFT = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    const erc721ObjL = new ethers.Contract(data.get(\"nftaddress\"),erc721abi,signer)\n    \n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"nftaddress\"))\n    await console.log(data.get(\"tokenid\"))\n\n    \n\n    try {\n      if(state.button==1){\n          await console.log(\"Approve Clicked\")\n          await erc721ObjL.approve(CONTRACT_ADDRESS,data.get(\"tokenid\"));\n      }else{\n        await console.log(\"Lock Clicked\")\n          await contractObj.lockNFT(data.get(\"nftaddress\"),data.get(\"tokenid\"));\n    }\n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n    \n  };\n  \n  \n\n  const handleUnLocktNFT = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    const erc721ObjL = new ethers.Contract(data.get(\"nftaddress\"),erc721abi,signer)\n    \n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"nftaddress\"))\n    await console.log(data.get(\"tokenid\"))\n\n    \n\n    try {\n      \n        await console.log(\"Lock Clicked\")\n          await contractObj.unlockNFT(data.get(\"nftaddress\"),data.get(\"tokenid\"));\n    \n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n  };\n\n  \n\n\n  return (\n    <>\n\n<div id=\"app\" class=\"sub-app-section wf-section\">\n    <div class=\"sub-app-wrapper-1\">\n      <h2 class=\"sub-h2\">Lock NFT for voting power</h2>\n      <div class=\"w-form\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handleLocktNFT}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Enter your NFT collection/ project name*</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"nftaddress\" data-name=\"Name 2\" placeholder=\"NFT Address\" id=\"nftaddress\" required=\"\"></input>\n              <label for=\"text\" class=\"sub-form-label\">Give your project a token name *</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftsymbol\" maxlength=\"256\" name=\"tokenid\" data-name=\"Email 2\" placeholder=\"TokenID of NFT\" id=\"tokenid\" required=\"\"></input>\n              \n            </div>\n            \n          </div>\n          <input type=\"submit\" onClick={() => (state.button = 1)} value=\"APPROVE\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n          <br></br>\n          <input type=\"submit\" onClick={() => (state.button = 2)} value=\"LOCK NFT\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        <div class=\"w-form-done\">\n          <div>Thank you! Your submission has been received!</div>\n        </div>\n        <div class=\"w-form-fail\">\n          <div>Oops! Something went wrong while submitting the form.</div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-app-section withdraw-contract wf-section\">\n    <div class=\"sub-app-wrapper-1 withdraw-bloc\">\n      <div class=\"mint-grid\">\n        <div class=\"withdraw\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handleUnLocktNFT}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Enter your NFT collection/ project name*</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"nftaddress\" data-name=\"Name 2\" placeholder=\"NFT Address\" id=\"nftaddress\" required=\"\"></input>\n              <label for=\"text\" class=\"sub-form-label\">Give your project a token name *</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftsymbol\" maxlength=\"256\" name=\"tokenid\" data-name=\"Email 2\" placeholder=\"TokenID of NFT\" id=\"tokenid\" required=\"\"></input>\n              \n            </div>\n            \n          </div>\n          <input type=\"submit\" onClick={() => (state.button = 2)} value=\"UNLOCK NFT\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-recent wf-section\">\n    <div class=\"sub-app-wrapper-3\">\n      <h2 class=\"sub-h2\">Voting Power</h2>\n      <div id=\"w-node-_5c0edcd0-be75-3544-4a1a-61ea9d6c71eb-08db29d9\" class=\"info-card\">\n        {console.log(tableData)}\n        <TxList2 txs={tableData} />\n        {\n            tableData.forEach(element => {\n                totalVote+=element[\"votingPower\"]\n            })\n        }\n        <h2>Total Voting Power : {(Number(totalVote)/(10**18)).toString()}</h2>\n      </div>\n    </div>\n  </div>\n\n        \n\n        {\n          // tableData.map(function(element){\n          //   return(\n\n              \n          //     )\n          // })\n        }\n\n\n        {/* <Link to={{\n    pathname: \"/blogs/0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7\",\n    state: {\n      fromText: \"this is data\",\n    }\n  }}>\n            <h2>0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</h2>\n            <p>Written by 0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</p>\n          </Link> */}\n    \n      \n    \n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/TxList2.js",["131"],"\nimport { Link } from 'react-router-dom';\nimport BigNumber from \"big-number\";\n\nexport default function TxList2({ txs }) {\n  if (txs.length === 0) return null;\n  return (\n    <>\n      {txs\n        .map((item, idx) => (\n\n          <div key={idx} class=\"info-card\"><div id=\"w-node-_5f9e2abd-4801-26ba-696e-77b214c9096f-08db29d9\">\n          <p class=\"contract-info\">User Address: {item.userAddress}</p>\n          <p class=\"contract-info\">Voting Powers: {(Number(item.votingPower)/(10**18)).toString()} Veth</p>\n          \n          <Link variant=\"body2\" class=\"mint w-inline-block\"\n              to={{\n                pathname: `/blogs/${item.id}`,\n                state: {\n                  nftcontractdata: item,\n                }}}\n                >\n            <div class=\"text-block\">Mint NFTs from this Project</div>\n            </Link></div>\n        </div>\n          \n        ))}\n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/Vote.js",["132","133","134","135","136","137","138","139","140","141","142","143","144"],"\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport erc20abi from \"./ERC20abi.json\";\nimport erc721abi from \"./ERC721abi.json\";\nimport borgabi from \"./Borg.json\";\nimport factoryabi from \"./Factoryabi.json\";\nimport { gql } from \"@apollo/client\";\nimport { client } from \"./index\";\nimport BigNumber from \"big-number\";\nimport styles from \"./styles.css\";\nimport icon from \"./assets/icon.png\";\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from \"./ErrorMessage\";\nimport TxList3 from \"./TxList3\";\n\n\nconst CONTRACT_ADDRESS = \"0xFbCfa71Edfa6a7C4145A11b5417C4bc571F6f851\";\n\nexport default function Vote() {\n  const state = {\n    button: 1,\n  };\n  const [txs, setTxs] = useState([]);\n  const [contractListened, setContractListened] = useState();\n  const [error, setError] = useState();\n  const [contractInfo, setContractInfo] = useState({\n    address: \"-\",\n    tokenName: \"-\",\n    tokenSymbol: \"-\",\n    totalSupply: \"-\",\n  });\n  const [balanceInfo, setBalanceInfo] = useState({\n    address: \"-\",\n    balance: \"-\",\n  });\n  const [tableData, setTableData] = useState([]);\n  let totalVote = 0;\n  useEffect(() => {\n    client\n      .query({\n        query: gql`\n          query {\n            proposalEntities {\n    id\n    proposalID\n    fundAddress\n    fundAmount\n    proposalStatus\n    voteCount\n  }\n\n\n          }\n\n        `,\n      })\n      .then((result) => {\n        setTableData([...result.data.proposalEntities]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (contractInfo.address !== \"-\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const erc20 = new ethers.Contract(\n        contractInfo.address,\n        erc20abi,\n        provider\n      );\n\n      erc20.on(\"Transfer\", (from, to, amount, event) => {\n        console.log({ from, to, amount, event });\n\n        setTxs((currentTxs) => [\n          ...currentTxs,\n          {\n            txHash: event.transactionHash,\n            from,\n            to,\n            amount: String(amount),\n          },\n        ]);\n      });\n      setContractListened(erc20);\n\n      return () => {\n        contractListened.removeAllListeners();\n      };\n    }\n  }, [contractInfo.address]);\n\n  const setErrorHandler = (val) => {\n      setError(\n        ErrorMessage({\n          message: val,\n        })\n      );\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    \n  };\n\n  const handleAddProposal = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    \n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"projaddress\"))\n    await console.log(data.get(\"projamount\"))\n    let projamount = BigNumber(data.get(\"projamount\")*(10**18)).toString()\n    \n\n    try {\n      \n        await console.log(\"Proposal add Clicked\")\n          await contractObj.addProposal(data.get(\"projaddress\"),projamount);\n    \n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n    \n  };\n  \n  \n\n  const handlePropVote = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    \n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"propvote\"))\n    \n\n    try {\n      \n        await console.log(\"Proposal vote Clicked\")\n          await contractObj.vote(data.get(\"propvote\"));\n    \n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n  };\n\n\n  const handleExecuteVote = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    await console.log(data.get(\"mintID\"))\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n\n    const contractObj = new ethers.Contract(CONTRACT_ADDRESS,factoryabi,signer);\n    \n    // data.get(\"mintID\")\n    // let etherCalculation =  BigNumber(\"44000000000000000\").multiply(data.get(\"mintID\")).toString();\n    // await console.log(etherCalculation,\"asdasdda\");\n    // etherCalculation = etherCalculation\n    await console.log(data.get(\"propvote\"))\n    \n\n    try {\n      \n        await console.log(\"Proposal vote Clicked\")\n          await contractObj.executeVote(data.get(\"propvote\"));\n    \n    } catch (error) {\n      await console.log(error.message)\n      // setErrorHandler(error.message)\n      \n    }\n  };\n  \n\n\n  return (\n    <>\n\n<div id=\"app\" class=\"sub-app-section wf-section\">\n    <div class=\"sub-app-wrapper-1\">\n      <h2 class=\"sub-h2\">Fund another project</h2>\n      <div class=\"w-form\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handleAddProposal}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Project to be funded</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"projaddress\" data-name=\"Name 2\" placeholder=\"NFT Address\" id=\"projaddress\" required=\"\"></input>\n              <label for=\"text\" class=\"sub-form-label\">Amount to be funded</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftsymbol\" maxlength=\"256\" name=\"projamount\" data-name=\"Email 2\" placeholder=\"TokenID of NFT\" id=\"projamount\" required=\"\"></input>\n              \n            </div>\n            \n          </div>\n          \n          <input type=\"submit\" onClick={() => (state.button = 2)} value=\"ADD PROPOSAL\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        <div class=\"w-form-done\">\n          <div>Thank you! Your submission has been received!</div>\n        </div>\n        <div class=\"w-form-fail\">\n          <div>Oops! Something went wrong while submitting the form.</div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-app-section withdraw-contract wf-section\">\n  <div class=\"sub-app-wrapper-1\">\n      <h2 class=\"sub-h2\">Vote on Proposal</h2>\n      <div class=\"w-form\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handlePropVote}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Project ID to vote</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"propvote\" data-name=\"Name 2\" placeholder=\"NFT Address\" id=\"propvote\" required=\"\"></input>\n             \n              \n            </div>\n            \n          </div>\n          \n          <input type=\"submit\" onClick={() => (state.button = 2)} value=\"VOTE PROPOSAL\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        <div class=\"w-form-done\">\n          <div>Thank you! Your submission has been received!</div>\n        </div>\n        <div class=\"w-form-fail\">\n          <div>Oops! Something went wrong while submitting the form.</div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-app-section wf-section\">\n  <div class=\"sub-app-wrapper-1\">\n      <h2 class=\"sub-h2\">Execute Proposal(only for owner)</h2>\n      <div class=\"w-form\">\n        <form id=\"email-form\" name=\"email-form\" data-name=\"Email Form\" method=\"get\" class=\"form\" onSubmit={handleExecuteVote}>\n          <div class=\"div-block\">\n            <div class=\"div-block-2\">\n              <label for=\"text\" class=\"sub-form-label\">Project ID to execute</label>\n              <input type=\"text\" class=\"sub-input-field w-input nftname\" maxlength=\"256\" name=\"propvote\" data-name=\"Name 2\" placeholder=\"NFT Address\" id=\"propvote\" required=\"\"></input>\n             \n              \n            </div>\n            \n          </div>\n          \n          <input type=\"submit\" onClick={() => (state.button = 2)} value=\"EXECUTE PROPOSAL\" data-wait=\"Please wait...\" class=\"submit-button w-button\"></input>\n        </form>\n        <div class=\"w-form-done\">\n          <div>Thank you! Your submission has been received!</div>\n        </div>\n        <div class=\"w-form-fail\">\n          <div>Oops! Something went wrong while submitting the form.</div>\n        </div>\n      </div>\n      <div class=\"div-block-8 mint\"></div>\n    </div>\n  </div>\n  <div id=\"app\" class=\"sub-recent wf-section\">\n    <div class=\"sub-app-wrapper-3\">\n      <h2 class=\"sub-h2\">Voting Power</h2>\n      <div id=\"w-node-_5c0edcd0-be75-3544-4a1a-61ea9d6c71eb-08db29d9\" class=\"info-card\">\n        {console.log(tableData)}\n        <TxList3 txs={tableData} />\n        \n      </div>\n    </div>\n  </div>\n\n        \n\n        {\n          // tableData.map(function(element){\n          //   return(\n\n              \n          //     )\n          // })\n        }\n\n\n        {/* <Link to={{\n    pathname: \"/blogs/0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7\",\n    state: {\n      fromText: \"this is data\",\n    }\n  }}>\n            <h2>0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</h2>\n            <p>Written by 0xf481809a8f2e451bd7d7253ad8f7ec3c65b971c7</p>\n          </Link> */}\n    \n      \n    \n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/TxList3.js",["145","146"],"\nimport { Link } from 'react-router-dom';\nimport BigNumber from \"big-number\";\n\nexport default function TxList3({ txs }) {\n  if (txs.length === 0) return null;\n  return (\n    <>\n      {txs\n        .map((item, idx) => (\n\n          <div key={idx} class=\"info-card\"><div id=\"w-node-_5f9e2abd-4801-26ba-696e-77b214c9096f-08db29d9\">\n          <p class=\"contract-info\">Proposal ID: {item.proposalID}</p>\n          <p class=\"contract-info\">Fund Address: {item.fundAddress}</p>\n          <p class=\"contract-info\">Fund Amount: {(Number(item.fundAmount)/(10**18)).toString()} ETH</p>\n          <p class=\"contract-info\">Proposal Status: {item.proposalStatus}</p>\n          {console.log(item.voteCount)}\n          <p class=\"contract-info\">Vote Count: {(Number(item.voteCount)/(10**18)).toString()} Veth</p>\n          \n          </div>\n        </div>\n          \n        ))}\n    </>\n  );\n}\n","/Users/madhurdixit/Downloads/yanft/src/Poap.js",["147","148","149","150","151","152","153","154","155","156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":18},{"ruleId":"164","severity":1,"message":"169","line":5,"column":10,"nodeType":"166","messageId":"167","endLine":5,"endColumn":18},{"ruleId":"164","severity":1,"message":"170","line":5,"column":20,"nodeType":"166","messageId":"167","endLine":5,"endColumn":29},{"ruleId":"164","severity":1,"message":"171","line":7,"column":7,"nodeType":"166","messageId":"167","endLine":7,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":19,"column":7,"nodeType":"174","endLine":19,"endColumn":39},{"ruleId":"164","severity":1,"message":"169","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":18},{"ruleId":"164","severity":1,"message":"170","line":2,"column":20,"nodeType":"166","messageId":"167","endLine":2,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"175","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"176","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":15},{"ruleId":"164","severity":1,"message":"168","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":18},{"ruleId":"164","severity":1,"message":"177","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":13},{"ruleId":"164","severity":1,"message":"178","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":16},{"ruleId":"164","severity":1,"message":"179","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":12},{"ruleId":"164","severity":1,"message":"182","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":20},{"ruleId":"164","severity":1,"message":"183","line":14,"column":8,"nodeType":"166","messageId":"167","endLine":14,"endColumn":14},{"ruleId":"164","severity":1,"message":"176","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":15},{"ruleId":"164","severity":1,"message":"180","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":12},{"ruleId":"164","severity":1,"message":"184","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":14},{"ruleId":"164","severity":1,"message":"185","line":20,"column":9,"nodeType":"166","messageId":"167","endLine":20,"endColumn":14},{"ruleId":"164","severity":1,"message":"186","line":23,"column":10,"nodeType":"166","messageId":"167","endLine":23,"endColumn":13},{"ruleId":"164","severity":1,"message":"187","line":25,"column":10,"nodeType":"166","messageId":"167","endLine":25,"endColumn":15},{"ruleId":"164","severity":1,"message":"188","line":26,"column":24,"nodeType":"166","messageId":"167","endLine":26,"endColumn":39},{"ruleId":"164","severity":1,"message":"189","line":32,"column":10,"nodeType":"166","messageId":"167","endLine":32,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":32,"column":23,"nodeType":"166","messageId":"167","endLine":32,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":90,"column":6,"nodeType":"193","endLine":90,"endColumn":28,"suggestions":"194"},{"ruleId":"164","severity":1,"message":"195","line":92,"column":9,"nodeType":"166","messageId":"167","endLine":92,"endColumn":24},{"ruleId":"164","severity":1,"message":"196","line":155,"column":11,"nodeType":"166","messageId":"167","endLine":155,"endColumn":15},{"ruleId":"164","severity":1,"message":"170","line":2,"column":20,"nodeType":"166","messageId":"167","endLine":2,"endColumn":29},{"ruleId":"164","severity":1,"message":"175","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"176","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":15},{"ruleId":"164","severity":1,"message":"168","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":18},{"ruleId":"164","severity":1,"message":"197","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":21},{"ruleId":"164","severity":1,"message":"177","line":8,"column":23,"nodeType":"166","messageId":"167","endLine":8,"endColumn":26},{"ruleId":"164","severity":1,"message":"178","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"179","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":12},{"ruleId":"164","severity":1,"message":"182","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":20},{"ruleId":"164","severity":1,"message":"198","line":20,"column":10,"nodeType":"166","messageId":"167","endLine":20,"endColumn":19},{"ruleId":"164","severity":1,"message":"199","line":20,"column":21,"nodeType":"166","messageId":"167","endLine":20,"endColumn":33},{"ruleId":"164","severity":1,"message":"200","line":22,"column":9,"nodeType":"166","messageId":"167","endLine":22,"endColumn":20},{"ruleId":"164","severity":1,"message":"196","line":47,"column":11,"nodeType":"166","messageId":"167","endLine":47,"endColumn":15},{"ruleId":"164","severity":1,"message":"179","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":17},{"ruleId":"164","severity":1,"message":"176","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"179","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":17},{"ruleId":"164","severity":1,"message":"180","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":12},{"ruleId":"164","severity":1,"message":"184","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":14},{"ruleId":"164","severity":1,"message":"186","line":24,"column":10,"nodeType":"166","messageId":"167","endLine":24,"endColumn":13},{"ruleId":"164","severity":1,"message":"187","line":26,"column":10,"nodeType":"166","messageId":"167","endLine":26,"endColumn":15},{"ruleId":"164","severity":1,"message":"188","line":27,"column":24,"nodeType":"166","messageId":"167","endLine":27,"endColumn":39},{"ruleId":"164","severity":1,"message":"189","line":33,"column":10,"nodeType":"166","messageId":"167","endLine":33,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":33,"column":23,"nodeType":"166","messageId":"167","endLine":33,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":87,"column":6,"nodeType":"193","endLine":87,"endColumn":28,"suggestions":"201"},{"ruleId":"164","severity":1,"message":"195","line":89,"column":9,"nodeType":"166","messageId":"167","endLine":89,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":120,"column":22,"nodeType":"204","messageId":"205","endLine":120,"endColumn":24},{"ruleId":"164","severity":1,"message":"206","line":146,"column":11,"nodeType":"166","messageId":"167","endLine":146,"endColumn":21},{"ruleId":"164","severity":1,"message":"179","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":17},{"ruleId":"164","severity":1,"message":"207","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":17},{"ruleId":"164","severity":1,"message":"176","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"180","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":12},{"ruleId":"164","severity":1,"message":"184","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":14},{"ruleId":"164","severity":1,"message":"186","line":24,"column":10,"nodeType":"166","messageId":"167","endLine":24,"endColumn":13},{"ruleId":"164","severity":1,"message":"187","line":26,"column":10,"nodeType":"166","messageId":"167","endLine":26,"endColumn":15},{"ruleId":"164","severity":1,"message":"188","line":27,"column":24,"nodeType":"166","messageId":"167","endLine":27,"endColumn":39},{"ruleId":"164","severity":1,"message":"189","line":33,"column":10,"nodeType":"166","messageId":"167","endLine":33,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":33,"column":23,"nodeType":"166","messageId":"167","endLine":33,"endColumn":37},{"ruleId":"164","severity":1,"message":"208","line":38,"column":7,"nodeType":"166","messageId":"167","endLine":38,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":91,"column":6,"nodeType":"193","endLine":91,"endColumn":28,"suggestions":"209"},{"ruleId":"164","severity":1,"message":"195","line":93,"column":9,"nodeType":"166","messageId":"167","endLine":93,"endColumn":24},{"ruleId":"164","severity":1,"message":"184","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"179","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":17},{"ruleId":"164","severity":1,"message":"176","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":15},{"ruleId":"164","severity":1,"message":"180","line":10,"column":8,"nodeType":"166","messageId":"167","endLine":10,"endColumn":14},{"ruleId":"164","severity":1,"message":"181","line":11,"column":8,"nodeType":"166","messageId":"167","endLine":11,"endColumn":12},{"ruleId":"164","severity":1,"message":"184","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":14},{"ruleId":"164","severity":1,"message":"185","line":26,"column":9,"nodeType":"166","messageId":"167","endLine":26,"endColumn":14},{"ruleId":"164","severity":1,"message":"186","line":29,"column":10,"nodeType":"166","messageId":"167","endLine":29,"endColumn":13},{"ruleId":"164","severity":1,"message":"187","line":31,"column":10,"nodeType":"166","messageId":"167","endLine":31,"endColumn":15},{"ruleId":"164","severity":1,"message":"188","line":32,"column":24,"nodeType":"166","messageId":"167","endLine":32,"endColumn":39},{"ruleId":"164","severity":1,"message":"189","line":38,"column":10,"nodeType":"166","messageId":"167","endLine":38,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":38,"column":23,"nodeType":"166","messageId":"167","endLine":38,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":96,"column":6,"nodeType":"193","endLine":96,"endColumn":28,"suggestions":"210"},{"ruleId":"164","severity":1,"message":"195","line":98,"column":9,"nodeType":"166","messageId":"167","endLine":98,"endColumn":24},{"ruleId":"164","severity":1,"message":"196","line":192,"column":11,"nodeType":"166","messageId":"167","endLine":192,"endColumn":15},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'ethers' is defined but never used.","Identifier","unusedVar","'factoryabi' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CONTRACT_ADDRESS' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'erc20abi' is defined but never used.","'borgabi' is defined but never used.","'gql' is defined but never used.","'client' is defined but never used.","'BigNumber' is defined but never used.","'styles' is defined but never used.","'icon' is defined but never used.","'ErrorMessage' is defined but never used.","'TxList' is defined but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","'txs' is assigned a value but never used.","'error' is assigned a value but never used.","'setContractInfo' is assigned a value but never used.","'balanceInfo' is assigned a value but never used.","'setBalanceInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contractListened'. Either include it or remove the dependency array.","ArrayExpression",["213"],"'setErrorHandler' is assigned a value but never used.","'data' is assigned a value but never used.","'fromPromise' is defined but never used.","'tableData' is assigned a value but never used.","'setTableData' is assigned a value but never used.","'stateButton' is assigned a value but never used.",["214"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'erc721ObjL' is assigned a value but never used.","'erc721abi' is defined but never used.","'totalVote' is assigned a value but never used.",["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"217","fix":"220"},{"desc":"217","fix":"221"},"Update the dependencies array to be: [contractInfo.address, contractListened]",{"range":"222","text":"223"},{"range":"224","text":"223"},{"range":"225","text":"223"},{"range":"226","text":"223"},[2220,2242],"[contractInfo.address, contractListened]",[2116,2138],[2173,2195],[2708,2730]]